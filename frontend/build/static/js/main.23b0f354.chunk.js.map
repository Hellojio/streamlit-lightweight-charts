{"version":3,"sources":["LightweightCharts.tsx","index.tsx"],"names":["LightweightCharts","renderData","useRenderData","chartOptions","args","series","chartContainerRef","useRef","useEffect","current","_chartContainerRef$cu2","handleResize","_chartContainerRef$cu","chart","applyOptions","width","clientWidth","createChart","_objectSpread","height","timeScale","fitContent","_step","_iterator","_createForOfIteratorHelper","s","n","done","seriesObject","value","newSeries","type","addAreaSeries","seriesOptions","addBarSeries","addBaselineSeries","options","addCandlestickSeries","addHistogramSeries","addLineSeries","setData","data","err","e","f","window","addEventListener","removeEventListener","remove","React","createElement","ref","ReactDOM","render","StrictMode","StreamlitProvider","document","getElementById"],"mappings":"4PAyEeA,EArEsB,WAInC,IAAMC,EAAaC,0BACbC,EAAeF,EAAWG,KAAmB,aAC7CC,EAASJ,EAAWG,KAAa,OAEjCE,EAAoBC,iBAAuB,MAwDlD,OAtDCC,qBACA,WACI,GAAGF,EAAkBG,QAAQ,CAAC,IAADC,EACrBC,EAAe,WAAO,IAADC,EACzBC,EAAMC,aAAa,CAAEC,MAAwB,OAAjBT,QAAiB,IAAjBA,GAA0B,QAATM,EAAjBN,EAAmBG,eAAO,IAAAG,OAAT,EAAjBA,EAA4BI,eAGpDH,EAAQI,YAA6B,OAAjBX,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBG,QAAOS,wBAAA,CAClDC,OAAQ,KACLhB,GAAY,IACfY,MAAwB,OAAjBT,QAAiB,IAAjBA,GAA0B,QAATI,EAAjBJ,EAAmBG,eAAO,IAAAC,OAAT,EAAjBA,EAA4BM,eAGrCH,EAAMO,YAAYC,aAAa,IAEEC,EAFFC,EAAAC,YAEJnB,GAAM,IAAjC,IAAAkB,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAkC,CAAC,IAAxBC,EAAYN,EAAAO,MAEjBC,OAAS,EACb,OAAOF,EAAaG,MAClB,IAAK,OACHD,EAAYjB,EAAMmB,cAAcJ,EAAaK,eAC7C,MACF,IAAK,MACHH,EAAYjB,EAAMqB,aAAaN,EAAaK,eAC5C,MACF,IAAK,WACHH,EAAYjB,EAAMsB,kBAAkBP,EAAaQ,SACjD,MACF,IAAK,cACHN,EAAYjB,EAAMwB,qBAAqBT,EAAaK,eACpD,MACF,IAAK,YACHH,EAAYjB,EAAMyB,mBAAmBV,EAAaK,eAClD,MACF,IAAK,OACHH,EAAYjB,EAAM0B,cAAcX,EAAaK,eAC7C,MACF,QACI,OAGNH,EAAUU,QAAQZ,EAAaa,OAChC,MAAAC,GAAAnB,EAAAoB,EAAAD,GAAA,QAAAnB,EAAAqB,IAGD,OADAC,OAAOC,iBAAiB,SAAUnC,GAC3B,WACLkC,OAAOE,oBAAoB,SAAUpC,GACrCE,EAAMmC,aAId,CAAC3C,EAAQF,IAIT8C,IAAAC,cAAA,OAAKC,IAAK7C,KChEZ8C,IAASC,OACPJ,IAAAC,cAACD,IAAMK,WAAU,KACfL,IAAAC,cAACK,oBAAiB,KAChBN,IAAAC,cAAClD,EAAiB,QAGtBwD,SAASC,eAAe,W","file":"static/js/main.23b0f354.chunk.js","sourcesContent":["import { useRenderData } from \"streamlit-component-lib-react-hooks\"\nimport { createChart } from \"lightweight-charts\"\nimport React, { useRef, useEffect } from \"react\"\n\nconst LightweightCharts: React.VFC = () => {\n\n  // returns the renderData passed from Python\n  // { args: object, disabled: boolean, theme: object }\n  const renderData = useRenderData()  \n  const chartOptions = renderData.args[\"chartOptions\"]\n  const series = renderData.args[\"series\"]\n\n  const chartContainerRef = useRef<HTMLDivElement>(null)\n  \n  useEffect(\n\t\t() => {\n      if(chartContainerRef.current){\n        const handleResize = () => {\n          chart.applyOptions({ width: chartContainerRef?.current?.clientWidth })\n        }\n\n        const chart = createChart(chartContainerRef?.current, {\n          height: 300,\n          ...chartOptions,\n          width: chartContainerRef?.current?.clientWidth\n        })\n\n        chart.timeScale().fitContent();\n\n        for (const seriesObject of series){\n          \n          let newSeries\n          switch(seriesObject.type) {\n            case 'Area':\n              newSeries = chart.addAreaSeries(seriesObject.seriesOptions)\n              break\n            case 'Bar':\n              newSeries = chart.addBarSeries(seriesObject.seriesOptions )\n              break\n            case 'Baseline':\n              newSeries = chart.addBaselineSeries(seriesObject.options)\n              break\n            case 'Candlestick':\n              newSeries = chart.addCandlestickSeries(seriesObject.seriesOptions)\n              break\n            case 'Histogram':\n              newSeries = chart.addHistogramSeries(seriesObject.seriesOptions)\n              break\n            case 'Line':\n              newSeries = chart.addLineSeries(seriesObject.seriesOptions)\n              break\n            default:\n                return\n          }\n\n          newSeries.setData(seriesObject.data)\n        }\n\n        window.addEventListener('resize', handleResize)\n        return () => { // required because how useEffect() works \n          window.removeEventListener('resize', handleResize)\n          chart.remove()\n        }\n      }\n\t\t},\n\t\t[series, chartOptions]\n\t)\n\n\treturn (\n\t\t<div ref={chartContainerRef} />\n\t)\n}\n\nexport default LightweightCharts\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { StreamlitProvider } from \"streamlit-component-lib-react-hooks\"\nimport LightweightCharts from \"./LightweightCharts\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitProvider>\n      <LightweightCharts />\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}